(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const u of n.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&o(u)}).observe(document,{childList:!0,subtree:!0});function r(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(s){if(s.ep)return;s.ep=!0;const n=r(s);fetch(s.href,n)}})();const T=`
<main>
  <h1>Convert text to speech</h1>
  <p><label for="ron_text">Enter text:</label></p>
  <textarea name="ron_text" id="ron_text" rows="20" cols="33"
    placeholder="Enter text here"></textarea>
  <div class="button-group">
    <button id="process_text_button" type="button" disabled>Create Speech</button>
    <button id="clear_button" type="button" disabled>Clear Text</button>
    <button id="halt_button" type="button" disabled>Halt Processing</button>
  </div>
  <audio id="audio_output" controls
    style="opacity: 0.4; transition: opacity 0.2s ease-in-out;">
  </audio>
  <p id="status_report">Downloading artificial neural network...</p>
  <progress id="progress_bar" max="100" value="0"
    style="opacity: 0; transition: opacity 0.2s ease-in-out; width: 100%;">
  </progress>
</main>

<footer>
  <h2>How it works</h2>
  <p>
    This web app uses advanced machine-learning running right in your browser to
    convert text into natural-sounding speech. Your text stays private on your device.
  </p>
  <p>
    Powered by <a
      href="https://huggingface.co/docs/transformers.js/index">Transformers.js</a>
    and <a href="https://huggingface.co/Xenova/speecht5_tts">Xenova</a>.
  </p>
  <p>
    <a href="https://github.com/martinmphil/ron_reade" target="_blank"
      rel="noopener noreferrer">Ron Reade project on GitHub</a>
  </p>
</footer>
`,R={audioLifecycle:"modelLoading",modelLoadRetryCount:0,processingRetryCount:0,errorMessage:null,processingProgress:0,processingTotal:0,lastProcessedText:null},L=7;function m(e,t){switch(t.type){case"USER_INPUT_TEXT":return{...e,audioLifecycle:"idle"};case"USER_CLEARED_TEXT":return e;case"PROCESS_TEXT_SUBMITTED":return e.audioLifecycle==="idle"||e.audioLifecycle==="paused"||e.audioLifecycle==="readyToPlay"?{...e,audioLifecycle:"processing",processingRetryCount:0,errorMessage:null,processingProgress:0,processingTotal:t.payload.totalChunks}:e;case"PROCESSING_CHUNK_SUCCESS":return{...e,processingProgress:e.processingProgress+1};case"MODEL_LOAD_SUCCESS":return{...e,audioLifecycle:"idle",modelLoadRetryCount:0};case"MODEL_LOAD_FAILURE":const r=e.modelLoadRetryCount+1;return r>=L?{...e,audioLifecycle:"error",errorMessage:"Failed to load the AI model after several retries. Please reload the page."}:{...e,modelLoadRetryCount:r};case"PROCESSING_SUCCESS":return{...e,audioLifecycle:"readyToPlay",processingRetryCount:0,lastProcessedText:t.payload};case"PROCESSING_FAILURE":const o=e.processingRetryCount+1;return o>=L?{...e,audioLifecycle:"error",errorMessage:t.payload}:{...e,processingRetryCount:o,errorMessage:t.payload};case"USER_HALTED_PROCESSING":return{...e,audioLifecycle:"modelLoading"};case"USER_PLAYED_AUDIO":return{...e,audioLifecycle:"playing"};case"USER_PAUSED_AUDIO":return{...e,audioLifecycle:"paused"};case"AUDIO_PLAYBACK_ENDED":return{...e,audioLifecycle:"idle"};default:return e}}function _(e,t){const{audioLifecycle:r,errorMessage:o,processingProgress:s,processingTotal:n,lastProcessedText:u}=t,p=e.ronText.value.trim(),f=p.length>0&&p!==u&&(r==="idle"||r==="paused"||r==="readyToPlay");e.processTextButton.disabled=!f,e.haltButton.disabled=r!=="processing",e.clearButton.disabled=e.ronText.value.trim().length===0;const a=r==="readyToPlay"||r==="playing"||r==="paused";e.audioOutput.style.opacity=a?"1":"0.4";const l=r==="processing";switch(e.progressBar.style.opacity=l?"1":"0",l&&(e.progressBar.max=n+1,e.progressBar.value=s+1),r){case"modelLoading":e.statusReport.textContent="Downloading artificial neural network...";break;case"idle":e.statusReport.textContent=e.ronText.value.trim().length>0?"Ready to convert your text into speech.":"Please enter text to be read aloud.";break;case"processing":e.statusReport.textContent=`Processing chunk ${s+1} of ${n}...`;break;case"readyToPlay":e.statusReport.textContent="Please press the play button on the audio player.";break;case"playing":e.statusReport.textContent="Playback in progress...";break;case"paused":e.statusReport.textContent=e.ronText.value.trim().length>0?"Playback paused. Ready to process new text.":"Playback paused.";break;case"error":e.statusReport.textContent=o||"An unknown error occurred.";break;default:e.statusReport.textContent=""}}let c=null;function S(){c&&c.terminate(),c=new Worker(new URL("/demo/ron-reade/assets/voicing.worker-BBvgFA6c.js",import.meta.url),{type:"module"})}function x(){return new Promise((e,t)=>{if(!c)return t("Voicing service not initialized.");c.onmessage=r=>{r.data.type==="modelLoadSuccess"?e():r.data.type==="processingFailure"&&t(r.data.payload)},c.postMessage({type:"loadModel"})})}function P(e){return new Promise((t,r)=>{if(!c)return r("Voicing service not initialized.");c.onmessage=o=>{o.data.type==="processingSuccess"?t(o.data.payload):o.data.type==="processingFailure"&&r(o.data.payload)},c.postMessage({type:"processText",payload:e})})}const E=400;function U(e){const t=e.trim();if(!t)return[];const r=[];let o=t;for(;o.length>0;){let n=o.substring(0,E).indexOf(".");n!==-1?n+=1:o.length>E?n=E:n=o.length;const u=o.substring(0,n).trim();u&&r.push(u),o=o.substring(n).trim()}return r}function A(e,t){const p=t*4,d=e.length*4,y=36+d,f=new ArrayBuffer(44+d),a=new DataView(f);g(a,0,"RIFF"),a.setUint32(4,y,!0),g(a,8,"WAVE"),g(a,12,"fmt "),a.setUint32(16,16,!0),a.setUint16(20,3,!0),a.setUint16(22,1,!0),a.setUint32(24,t,!0),a.setUint32(28,p,!0),a.setUint16(32,4,!0),a.setUint16(34,32,!0),g(a,36,"data"),a.setUint32(40,d,!0);for(let l=0;l<e.length;l++)a.setFloat32(44+l*4,e[l],!0);return new Blob([a],{type:"audio/wav"})}function g(e,t,r){for(let o=0;o<r.length;o++)e.setUint8(t+o,r.charCodeAt(o))}const w=16e3;document.querySelector("#app").innerHTML=T;const i={state:R};document.addEventListener("DOMContentLoaded",b);window.addEventListener("pageshow",e=>{e.persisted&&b()});function b(){const e={ronText:document.getElementById("ron_text"),processTextButton:document.getElementById("process_text_button"),clearButton:document.getElementById("clear_button"),haltButton:document.getElementById("halt_button"),audioOutput:document.getElementById("audio_output"),progressBar:document.getElementById("progress_bar"),statusReport:document.getElementById("status_report")},t=r=>{const o=m(i.state,r);o!==i.state&&(i.state=o,_(e,i.state))};O(e,t),_(e,i.state),h(t)}function O(e,t){e.ronText.addEventListener("input",()=>{t({type:"USER_INPUT_TEXT"})}),e.clearButton.addEventListener("click",()=>{e.ronText.value="",e.ronText.dispatchEvent(new Event("input")),t({type:"USER_CLEARED_TEXT"})}),e.processTextButton.addEventListener("click",()=>{C(t,e,e.ronText.value)}),e.haltButton.addEventListener("click",()=>{S(),t({type:"USER_HALTED_PROCESSING"}),h(t)}),e.audioOutput.addEventListener("pause",()=>{e.audioOutput.ended?t({type:"AUDIO_PLAYBACK_ENDED"}):t({type:"USER_PAUSED_AUDIO"})}),e.audioOutput.addEventListener("play",()=>{t({type:"USER_PLAYED_AUDIO"})})}async function h(e){S();try{await x(),e({type:"MODEL_LOAD_SUCCESS"})}catch(t){console.error("Failed to load model:",t),e({type:"MODEL_LOAD_FAILURE"}),i.state.audioLifecycle==="modelLoading"&&setTimeout(()=>h(e),2e3*i.state.modelLoadRetryCount)}}async function C(e,t,r){if(i.state.audioLifecycle!=="idle"&&i.state.audioLifecycle!=="paused"&&i.state.audioLifecycle!=="readyToPlay")return;let o=new Float32Array(0);const s=U(r);if(s.length!==0){e({type:"PROCESS_TEXT_SUBMITTED",payload:{totalChunks:s.length}});try{for(const p of s){const d=await P(p);e({type:"PROCESSING_CHUNK_SUCCESS"});const y=new Float32Array(o.length+d.length);y.set(o,0),y.set(d,o.length),o=y}const n=A(o,w),u=URL.createObjectURL(n);t.audioOutput.src=u,e({type:"PROCESSING_SUCCESS",payload:r})}catch(n){console.error("Failed to process text:",n),e({type:"PROCESSING_FAILURE",payload:n.message}),i.state.audioLifecycle==="processing"&&setTimeout(()=>C(e,t,r),2e3*i.state.processingRetryCount)}}}
